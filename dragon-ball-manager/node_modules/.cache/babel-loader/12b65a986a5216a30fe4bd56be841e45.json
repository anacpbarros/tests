{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anacpbarros\\\\Desktop\\\\Projeto-react-cypress\\\\dragon-ball-manager\\\\src\\\\components\\\\Balls\\\\Balls.jsx\";\nimport React, { useState } from 'react';\nimport { Card as BCard, CardImg, CardBody, CardTitle, CardSubtitle, Badge, Col, Row, Form, FormGroup, Label, Button, Input, Modal, ModalFooter, ModalBody } from 'reactstrap';\nimport { Text, Flex } from 'rebass';\nimport styled from 'styled-components';\nconst Card = styled(BCard)`\n  height: 280px;\n  margin: 5px 0px;\n`;\n\nconst Balls = ({\n  balls,\n  profile\n}) => {\n  const [list, setList] = useState(balls);\n  const [modal, setModal] = useState(false);\n  const [currentBall, setBall] = useState(null);\n\n  const toggle = () => setModal(!modal);\n\n  const validateBall = ball => {\n    setBall(ball);\n    setModal(true);\n  };\n\n  const filterByMe = () => {\n    return balls.filter(ball => ball.owner === profile.id);\n  };\n\n  const filterNotMe = () => {\n    return balls.filter(ball => ball.owner !== profile.id);\n  };\n\n  const filter = value => {\n    const cases = {\n      me: () => setList(filterByMe()),\n      all: () => setList(balls),\n      notme: () => setList(filterNotMe())\n    };\n    return cases[value]();\n  };\n\n  const updateList = id => {\n    const newList = balls.map(ball => {\n      if (ball.id === id) return { ...ball,\n        owner: profile.id\n      };\n      return ball;\n    });\n    const newProfile = profile.balls.push(id);\n    setList(newList);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {\n    my: \"10px;\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Esferas\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Filtrar\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"filter\",\n    \"data-testid\": \"filter\",\n    onChange: ({\n      target: {\n        value\n      }\n    }) => filter(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Todas as esferas\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Minhas esferas\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"notme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"N\\xE3o tenho\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, list.length > 0 ? list.map((ball, i) => /*#__PURE__*/React.createElement(Col, {\n    sm: \"3\",\n    key: ball.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: ball.image,\n    alt: ball.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, ball.name), ball.owner !== profile.id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Badge, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, \"N\\xE3o encontrada\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    color: \"warning\",\n    onClick: () => validateBall(ball),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }, \"encontrei\")) : /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Encontrada\"))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Houve algum problema na busca das esferas\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Insira o c\\xF3digo da esfera de \", currentBall === null || currentBall === void 0 ? void 0 : currentBall.name, \":\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"ballcode\",\n    id: \"code\",\n    placeholder: \"Ex: 23412\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: () => updateList(currentBall === null || currentBall === void 0 ? void 0 : currentBall.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Validar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Voltar\"))));\n};\n\nexport default Balls;","map":{"version":3,"sources":["C:/Users/anacpbarros/Desktop/Projeto-react-cypress/dragon-ball-manager/src/components/Balls/Balls.jsx"],"names":["React","useState","Card","BCard","CardImg","CardBody","CardTitle","CardSubtitle","Badge","Col","Row","Form","FormGroup","Label","Button","Input","Modal","ModalFooter","ModalBody","Text","Flex","styled","Balls","balls","profile","list","setList","modal","setModal","currentBall","setBall","toggle","validateBall","ball","filterByMe","filter","owner","id","filterNotMe","value","cases","me","all","notme","updateList","newList","map","newProfile","push","target","length","i","image","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport {\r\n  Card as BCard,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Badge,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalFooter,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { Text, Flex } from 'rebass';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled(BCard)`\r\n  height: 280px;\r\n  margin: 5px 0px;\r\n`;\r\n\r\nconst Balls = ({ balls, profile }) => {\r\n  const [list, setList] = useState(balls);\r\n  const [modal, setModal] = useState(false);\r\n  const [currentBall, setBall] = useState(null);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const validateBall = (ball) => {\r\n    setBall(ball)\r\n    setModal(true)\r\n  }\r\n\r\n  const filterByMe = () => {\r\n    return balls.filter((ball) => ball.owner === profile.id);\r\n  };\r\n\r\n  const filterNotMe = () => {\r\n    return balls.filter((ball) => ball.owner !== profile.id);\r\n  };\r\n\r\n  const filter = (value) => {\r\n    const cases = {\r\n      me: () => setList(filterByMe()),\r\n      all: () => setList(balls),\r\n      notme: () => setList(filterNotMe()),\r\n    };\r\n    return cases[value]();\r\n  };\r\n\r\n  const updateList = (id) => {\r\n    const newList = balls.map((ball) => {\r\n      if(ball.id === id) return {\r\n        ...ball,\r\n        owner: profile.id\r\n      }\r\n      return ball\r\n    })\r\n    const newProfile = profile.balls.push(id)\r\n\r\n    setList(newList)\r\n    setModal(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex my='10px;' justifyContent='space-between'>\r\n        <Text fontSize='50px'>Esferas</Text>\r\n        <FormGroup>\r\n          <Label for='filter'>Filtrar</Label>\r\n          <Input\r\n            type='select'\r\n            name='select'\r\n            id='filter'\r\n            data-testid=\"filter\"\r\n            onChange={({ target: { value } }) => filter(value)}\r\n          >\r\n            <option value='all'>Todas as esferas</option>\r\n            <option value='me'>Minhas esferas</option>\r\n            <option value='notme'>Não tenho</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </Flex>\r\n      <Row>\r\n        {list.length > 0 ? (\r\n          list.map((ball, i) => (\r\n            <Col sm='3' key={ball.id}>\r\n              <Card>\r\n                <CardImg top width='100%' src={ball.image} alt={ball.name} />\r\n                <CardBody>\r\n                  <CardTitle>{ball.name}</CardTitle>\r\n                  {ball.owner !== profile.id ? (\r\n                    <>\r\n                      <Badge color='danger'>Não encontrada</Badge>\r\n                      <Button size='sm' color='warning' onClick={() => validateBall(ball)}>\r\n                        encontrei\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Badge color='success'>Encontrada</Badge>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        ) : (\r\n          <p>Houve algum problema na busca das esferas</p>\r\n        )}\r\n      </Row>\r\n      {/* Validate ball */}\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for='code'>Insira o código da esfera de {currentBall?.name}:</Label>\r\n            <Input\r\n              type='number'\r\n              name='ballcode'\r\n              id='code'\r\n              placeholder='Ex: 23412'\r\n            />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n        <Button color='success' onClick={() => updateList(currentBall?.id)}>\r\n            Validar\r\n          </Button>\r\n          <Button color='secondary' onClick={toggle}>\r\n            Voltar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balls;\r\n"]},"metadata":{},"sourceType":"module"}